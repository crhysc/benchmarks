#!/bin/bash

#SBATCH --job-name=cdvae_tc            
#SBATCH --output=/lab/mml/kipp/677/jarvis/rhys/benchmarks/job_runs/cdvae_benchmark_alex/fl_studio.out
#SBATCH --partition=batch
#SBATCH --nodes=1                         
#SBATCH --gres=gpu:1
#SBATCH --ntasks-per-node=4                # Run 4 tasks (processes) on the node
#SBATCH --cpus-per-task=2                  # 2 CPU cores per task (for multi‚Äêthreaded code)
#SBATCH --time=24:00:00                    # Max walltime (HH:MM:SS)
#SBATCH --mem=64G                           # Total RAM for the job (8 GB)

module load cuda/11.8
source /home/crc8/miniconda3/etc/profile.d/conda.sh
conda activate cdvae
nvidia-smi



export PROJECT_ROOT="/lab/mml/kipp/677/jarvis/rhys/benchmarks/models/cdvae"
export HYDRA_JOBS="/lab/mml/kipp/677/jarvis/rhys/benchmarks/job_runs/cdvae_benchmark_alex/hydra_outputs"
export HYDRA_FULL_ERROR="1"
export WABDB_DIR="/lab/mml/kipp/677/jarvis/rhys/benchmarks/job_runs/cdvae_benchmark_alex/wandb_outputs"
#export WANDB_MODE="offline"
source wandb_api_key.sh

echo "running python script"
python write_benchmark.py \
    --run_dir /lab/mml/kipp/677/jarvis/rhys/benchmarks/job_runs/cdvae_benchmark_alex/hydra_outputs/singlerun/2025-06-06/supercon \
    --use_tensor recon \
    --data_dir ../../models/cdvae/data/alexandria \
    --split    test \
    --output_csv AI-cdvae-AtomGen-Tc_supercon-dft_3d-test-rmse.csv \
    --dump_json alexandria_cdvae.json
echo "Done"


